@startuml

skinparam componentStyle uml2

() Component #Red
() Source #Green
() Source2 #Green
() Hook #Cyan
() Hook2 #Cyan
() Derivable #Lightgray
() Derivable2 #Lightgray
() Action #Magenta
() Status #Yellow

note as N1
<b>Component</b> - Pure function with JSX
<b>Source</b> - Only data struct: model
<b>Hook</b> - Source lifecycle callbacks: pull, put,reap
<b>Derivable</b> - Derivable from source: or other derivable
<b>Action</b> - Univeral source manager, modify source
<b>Status</b> - Grab and combine sources statuses from any entity
end note

skinparam interface {
  borderColor Gray
}

skinparam component {
  ArrowColor Gray
}

Status --> Component
Source ..> Status: Grabbed\nsrc
Source2 ..> Status: Grabbed\nsrc

Source --> Component
Component --> Action: Event\nchanges
Action .> Hook: Change source\nvia hooks
Action .> Hook2
Hook --> Source
Derivable --> Component
Source --> Derivable
Status .> Derivable: Grab src
Status ..> Action: Grab src
Source2 --> Derivable2
Derivable2 --> Derivable
Source2 --> Hook2
Source2 --> Hook

@enduml
